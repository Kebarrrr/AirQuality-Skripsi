kotlin version: 2.1.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: D:/akbar/File_Bar/Coding/bangkit/AndroidStudioProject/AirQuality/app/src/main/java/com/skripsi/airquality/ui/components/Pm25Indicator.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:55)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:42)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:28)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:192)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.runBackend(jvmCompilerPipeline.kt:80)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModule(jvmCompilerPipelineLightTree.kt:264)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileSingleModuleUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:231)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:86)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:146)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:102)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:316)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:674)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1659)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:Pm25Indicator visibility:public modality:FINAL <> (pm25Value:kotlin.Int, modifier:androidx.compose.ui.Modifier) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:pm25Value index:0 type:kotlin.Int
  VALUE_PARAMETER name:modifier index:1 type:androidx.compose.ui.Modifier
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=androidx.compose.ui.Modifier
  BLOCK_BODY
    VAR name:context type:android.content.Context [val]
      CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
        $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
          CALL 'public final fun <get-LocalContext> (): androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> origin=GET_PROPERTY
    VAR name:indicatorColor type:androidx.compose.ui.graphics.Color [val]
      WHEN type=androidx.compose.ui.graphics.Color origin=WHEN
        BRANCH
          if: CALL 'public final fun lessOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=LTEQ
            arg0: GET_VAR 'pm25Value: kotlin.Int declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=kotlin.Int origin=null
            arg1: CONST Int type=kotlin.Int value=12
          then: CALL 'public final fun colorResource (id: kotlin.Int): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.res.ColorResources_androidKt' type=androidx.compose.ui.graphics.Color origin=null
            id: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:aqi_good type:kotlin.Int visibility:public [static] declared in com.skripsi.airquality.R.color' type=kotlin.Int superQualifierSymbol=com.skripsi.airquality.R.color origin=null
        BRANCH
          if: CALL 'public final fun lessOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=LTEQ
            arg0: GET_VAR 'pm25Value: kotlin.Int declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=kotlin.Int origin=null
            arg1: CONST Int type=kotlin.Int value=35
          then: CALL 'public final fun colorResource (id: kotlin.Int): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.res.ColorResources_androidKt' type=androidx.compose.ui.graphics.Color origin=null
            id: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:aqi_moderate type:kotlin.Int visibility:public [static] declared in com.skripsi.airquality.R.color' type=kotlin.Int superQualifierSymbol=com.skripsi.airquality.R.color origin=null
        BRANCH
          if: CALL 'public final fun lessOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=LTEQ
            arg0: GET_VAR 'pm25Value: kotlin.Int declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=kotlin.Int origin=null
            arg1: CONST Int type=kotlin.Int value=65
          then: CALL 'public final fun colorResource (id: kotlin.Int): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.res.ColorResources_androidKt' type=androidx.compose.ui.graphics.Color origin=null
            id: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:aqi_unhealthy_sg type:kotlin.Int visibility:public [static] declared in com.skripsi.airquality.R.color' type=kotlin.Int superQualifierSymbol=com.skripsi.airquality.R.color origin=null
        BRANCH
          if: CALL 'public final fun lessOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=LTEQ
            arg0: GET_VAR 'pm25Value: kotlin.Int declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=kotlin.Int origin=null
            arg1: CONST Int type=kotlin.Int value=150
          then: CALL 'public final fun colorResource (id: kotlin.Int): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.res.ColorResources_androidKt' type=androidx.compose.ui.graphics.Color origin=null
            id: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:aqi_unhealthy type:kotlin.Int visibility:public [static] declared in com.skripsi.airquality.R.color' type=kotlin.Int superQualifierSymbol=com.skripsi.airquality.R.color origin=null
        BRANCH
          if: CALL 'public final fun lessOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=LTEQ
            arg0: GET_VAR 'pm25Value: kotlin.Int declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=kotlin.Int origin=null
            arg1: CONST Int type=kotlin.Int value=250
          then: CALL 'public final fun colorResource (id: kotlin.Int): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.res.ColorResources_androidKt' type=androidx.compose.ui.graphics.Color origin=null
            id: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:aqi_very_unhealthy type:kotlin.Int visibility:public [static] declared in com.skripsi.airquality.R.color' type=kotlin.Int superQualifierSymbol=com.skripsi.airquality.R.color origin=null
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: CALL 'public final fun colorResource (id: kotlin.Int): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.res.ColorResources_androidKt' type=androidx.compose.ui.graphics.Color origin=null
            id: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:aqi_hazardous type:kotlin.Int visibility:public [static] declared in com.skripsi.airquality.R.color' type=kotlin.Int superQualifierSymbol=com.skripsi.airquality.R.color origin=null
    VAR name:animatedProgress type:androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> [val]
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> origin=null
        <T>: androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D>
        calculation: BLOCK type=kotlin.Function0<androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun Pm25Indicator$lambda$0 (): androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt' type=kotlin.Function0<androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D>> origin=INLINE_LAMBDA reflectionTarget=null
    CALL 'public final fun LaunchedEffect (key1: kotlin.Any?, block: @[ExtensionFunctionType] kotlin.coroutines.SuspendFunction1<kotlinx.coroutines.CoroutineScope, kotlin.Unit>): kotlin.Unit declared in androidx.compose.runtime.EffectsKt' type=kotlin.Unit origin=null
      key1: GET_VAR 'pm25Value: kotlin.Int declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=kotlin.Int origin=null
      block: BLOCK type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
        CLASS SUSPEND_LAMBDA CLASS name:<no name provided> modality:FINAL visibility:public/*package*/ superTypes:[kotlin.coroutines.jvm.internal.SuspendLambda; kotlin.jvm.functions.Function2<kotlinx.coroutines.CoroutineScope, kotlin.coroutines.Continuation<kotlin.Unit>?, kotlin.Any?>]
          $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>
          FIELD name:label type:kotlin.Int visibility:public/*package*/
          CONSTRUCTOR SUSPEND_LAMBDA visibility:public/*package*/ <> ($animatedProgress:androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D>, $pm25Value:kotlin.Int, $completion:kotlin.coroutines.Continuation<com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>>?) returnType:com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> [primary]
            VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$animatedProgress index:0 type:androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D>
            VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$pm25Value index:1 type:kotlin.Int
            VALUE_PARAMETER name:$completion index:2 type:kotlin.coroutines.Continuation<com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>>?
            BLOCK_BODY
              SET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$animatedProgress type:androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> visibility:public/*package*/ [final] declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=kotlin.Unit origin=INITIALIZER_OF_FIELD_FOR_CAPTURED_VALUE
                receiver: GET_VAR '<this>: com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
                value: GET_VAR '$animatedProgress: androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.<init>' type=androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> origin=null
              SET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$pm25Value type:kotlin.Int visibility:public/*package*/ [final] declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=kotlin.Unit origin=INITIALIZER_OF_FIELD_FOR_CAPTURED_VALUE
                receiver: GET_VAR '<this>: com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
                value: GET_VAR '$pm25Value: kotlin.Int declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.<init>' type=kotlin.Int origin=null
              DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> (arity: kotlin.Int, $completion: kotlin.coroutines.Continuation<kotlin.Any?>?) declared in kotlin.coroutines.jvm.internal.SuspendLambda'
                arity: CONST Int type=kotlin.Int value=2
                $completion: GET_VAR '$completion: kotlin.coroutines.Continuation<com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>>? declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.<init>' type=kotlin.coroutines.Continuation<com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>>? origin=null
              BLOCK type=kotlin.Unit origin=null
          FUN name:invokeSuspend visibility:public modality:FINAL <> ($this:com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>, $result:kotlin.Result<kotlin.Any?>) returnType:kotlin.Any?
            overridden:
              protected abstract fun invokeSuspend ($result: kotlin.Result<kotlin.Any?>): kotlin.Any? declared in kotlin.coroutines.jvm.internal.SuspendLambda
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>
            VALUE_PARAMETER name:$result index:0 type:kotlin.Result<kotlin.Any?>
            BLOCK_BODY
              COMPOSITE type=kotlin.Unit origin=null
                TYPE_OP type=androidx.compose.animation.core.AnimationResult<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> origin=IMPLICIT_CAST typeOperand=androidx.compose.animation.core.AnimationResult<kotlin.Float, androidx.compose.animation.core.AnimationVector1D>
                  CALL 'public final fun animateTo$default ($this: androidx.compose.animation.core.Animatable<T of androidx.compose.animation.core.Animatable, V of androidx.compose.animation.core.Animatable>, targetValue: T of androidx.compose.animation.core.Animatable, animationSpec: androidx.compose.animation.core.AnimationSpec<T of androidx.compose.animation.core.Animatable>?, initialVelocity: T of androidx.compose.animation.core.Animatable?, block: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Animatable<T of androidx.compose.animation.core.Animatable, V of androidx.compose.animation.core.Animatable>, kotlin.Unit>?, $completion: kotlin.coroutines.Continuation<androidx.compose.animation.core.AnimationResult<T of androidx.compose.animation.core.Animatable, V of androidx.compose.animation.core.Animatable>>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Any? [suspend] declared in androidx.compose.animation.core.Animatable' type=androidx.compose.animation.core.AnimationResult<T of androidx.compose.animation.core.Animatable, V of androidx.compose.animation.core.Animatable> origin=DEFAULT_DISPATCH_CALL
                    $this: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$animatedProgress type:androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> visibility:public/*package*/ [final] declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> origin=null
                      receiver: GET_VAR '<this>: com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.invokeSuspend' type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
                    targetValue: CALL 'public final fun div (other: kotlin.Float): kotlin.Float [operator] declared in kotlin.Int' type=kotlin.Float origin=DIV
                      $this: CALL 'public final fun coerceIn (minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int declared in kotlin.ranges.RangesKt' type=kotlin.Int origin=null
                        $receiver: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$pm25Value type:kotlin.Int visibility:public/*package*/ [final] declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=kotlin.Int origin=null
                          receiver: GET_VAR '<this>: com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.invokeSuspend' type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
                        minimumValue: CONST Int type=kotlin.Int value=0
                        maximumValue: CONST Int type=kotlin.Int value=300
                      other: CONST Float type=kotlin.Float value=300.0
                    animationSpec: TYPE_OP type=androidx.compose.animation.core.TweenSpec<kotlin.Float> origin=IMPLICIT_CAST typeOperand=androidx.compose.animation.core.TweenSpec<kotlin.Float>
                      CALL 'public final fun tween$default <T> (durationMillis: kotlin.Int, delayMillis: kotlin.Int, easing: androidx.compose.animation.core.Easing?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.animation.core.TweenSpec<T of androidx.compose.animation.core.AnimationSpecKt.tween$default> declared in androidx.compose.animation.core.AnimationSpecKt' type=androidx.compose.animation.core.TweenSpec<T of androidx.compose.animation.core.AnimationSpecKt.tween$default> origin=DEFAULT_DISPATCH_CALL
                        <T>: kotlin.Float
                        durationMillis: CONST Int type=kotlin.Int value=1000
                        delayMillis: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE
                          CONST Int type=kotlin.Int value=0
                        easing: CALL 'public final fun <get-LinearOutSlowInEasing> (): androidx.compose.animation.core.Easing declared in androidx.compose.animation.core.EasingKt' type=androidx.compose.animation.core.Easing origin=GET_PROPERTY
                        $mask0: CONST Int type=kotlin.Int value=2
                        $handler: CONST Null type=kotlin.Any? value=null
                    initialVelocity: COMPOSITE type=T of androidx.compose.animation.core.Animatable? origin=DEFAULT_VALUE
                      CONST Null type=kotlin.Any? value=null
                    block: COMPOSITE type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Animatable<T of androidx.compose.animation.core.Animatable, V of androidx.compose.animation.core.Animatable>, kotlin.Unit>? origin=DEFAULT_VALUE
                      CONST Null type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Animatable<T of androidx.compose.animation.core.Animatable, V of androidx.compose.animation.core.Animatable>, kotlin.Unit>? value=null
                    $completion: GET_VAR '<this>: com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.invokeSuspend' type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
                    $mask0: CONST Int type=kotlin.Int value=12
                    $handler: CONST Null type=kotlin.Any? value=null
                COMPOSITE type=kotlin.Unit origin=null
          FUN name:create visibility:public modality:FINAL <> ($this:com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>, value:kotlin.Any?, $completion:kotlin.coroutines.Continuation<kotlin.Nothing>) returnType:kotlin.coroutines.Continuation<kotlin.Unit>
            overridden:
              public open fun create (value: kotlin.Any?, $completion: kotlin.coroutines.Continuation<kotlin.Nothing>): kotlin.coroutines.Continuation<kotlin.Unit> declared in kotlin.coroutines.jvm.internal.SuspendLambda
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>
            VALUE_PARAMETER name:value index:0 type:kotlin.Any?
            VALUE_PARAMETER name:$completion index:1 type:kotlin.coroutines.Continuation<kotlin.Nothing>
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='public final fun create (value: kotlin.Any?, $completion: kotlin.coroutines.Continuation<kotlin.Nothing>): kotlin.coroutines.Continuation<kotlin.Unit> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>'
                CONSTRUCTOR_CALL 'public/*package*/ constructor <init> ($animatedProgress: androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D>, $pm25Value: kotlin.Int, $completion: kotlin.coroutines.Continuation<com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>>?) [primary] declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
                  $animatedProgress: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$animatedProgress type:androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> visibility:public/*package*/ [final] declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> origin=null
                    receiver: GET_VAR '<this>: com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.create' type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
                  $pm25Value: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$pm25Value type:kotlin.Int visibility:public/*package*/ [final] declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=kotlin.Int origin=null
                    receiver: GET_VAR '<this>: com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.create' type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
                  $completion: GET_VAR '$completion: kotlin.coroutines.Continuation<kotlin.Nothing> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.create' type=kotlin.coroutines.Continuation<kotlin.Nothing> origin=null
          FUN name:invoke visibility:public modality:FINAL <> ($this:com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>, p1:kotlinx.coroutines.CoroutineScope, p2:kotlin.coroutines.Continuation<kotlin.Unit>?) returnType:kotlin.Any?
            overridden:
              public abstract fun invoke (p1: P1 of kotlin.jvm.functions.Function2, p2: P2 of kotlin.jvm.functions.Function2): R of kotlin.jvm.functions.Function2 declared in kotlin.jvm.functions.Function2
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>
            VALUE_PARAMETER name:p1 index:0 type:kotlinx.coroutines.CoroutineScope
            VALUE_PARAMETER name:p2 index:1 type:kotlin.coroutines.Continuation<kotlin.Unit>?
            BLOCK_BODY
              RETURN type=kotlin.Nothing from='public final fun invoke (p1: kotlinx.coroutines.CoroutineScope, p2: kotlin.coroutines.Continuation<kotlin.Unit>?): kotlin.Any? declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>'
                CALL 'public final fun invokeSuspend ($result: kotlin.Result<kotlin.Any?>): kotlin.Any? declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=kotlin.Any? origin=null
                  $this: TYPE_OP type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=IMPLICIT_CAST typeOperand=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>
                    CALL 'public final fun create (value: kotlin.Any?, $completion: kotlin.coroutines.Continuation<kotlin.Nothing>): kotlin.coroutines.Continuation<kotlin.Unit> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=kotlin.coroutines.Continuation<kotlin.Unit> origin=null
                      $this: GET_VAR '<this>: com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.invoke' type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
                      value: GET_VAR 'p1: kotlinx.coroutines.CoroutineScope declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.invoke' type=kotlinx.coroutines.CoroutineScope origin=null
                      $completion: GET_VAR 'p2: kotlin.coroutines.Continuation<kotlin.Unit>? declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.invoke' type=kotlin.coroutines.Continuation<kotlin.Unit>? origin=null
                  $result: CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=kotlin.Result<kotlin.Any?> origin=null
                    <T>: kotlin.Any?
                    <R>: kotlin.Result<kotlin.Any?>
                    v: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:INSTANCE type:kotlin.Unit visibility:public [final,static] declared in kotlin.Unit' type=kotlin.Unit origin=null
          FIELD FIELD_FOR_CAPTURED_VALUE name:$animatedProgress type:androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> visibility:public/*package*/ [final]
          FIELD FIELD_FOR_CAPTURED_VALUE name:$pm25Value type:kotlin.Int visibility:public/*package*/ [final]
          FUN BRIDGE name:invoke visibility:public modality:OPEN <> ($this:com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>, p1:kotlin.Any?, p2:kotlin.Any?) returnType:kotlin.Any?
            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>
            VALUE_PARAMETER BRIDGE name:p1 index:0 type:kotlin.Any?
            VALUE_PARAMETER BRIDGE name:p2 index:1 type:kotlin.Any?
            EXPRESSION_BODY
              RETURN type=kotlin.Nothing from='public open fun invoke (p1: kotlin.Any?, p2: kotlin.Any?): kotlin.Any? declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>'
                CALL 'public final fun invoke (p1: kotlinx.coroutines.CoroutineScope, p2: kotlin.coroutines.Continuation<kotlin.Unit>?): kotlin.Any? declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=kotlin.Any? origin=BRIDGE_DELEGATION
                  $this: GET_VAR '<this>: com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.invoke' type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
                  p1: TYPE_OP type=kotlinx.coroutines.CoroutineScope origin=IMPLICIT_CAST typeOperand=kotlinx.coroutines.CoroutineScope
                    GET_VAR 'p1: kotlin.Any? declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.invoke' type=kotlin.Any? origin=null
                  p2: TYPE_OP type=kotlin.coroutines.Continuation<*> origin=IMPLICIT_CAST typeOperand=kotlin.coroutines.Continuation<*>
                    GET_VAR 'p2: kotlin.Any? declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>.invoke' type=kotlin.Any? origin=null
        CONSTRUCTOR_CALL 'public/*package*/ constructor <init> ($animatedProgress: androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D>, $pm25Value: kotlin.Int, $completion: kotlin.coroutines.Continuation<com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>>?) [primary] declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided>' type=com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator.<no name provided> origin=null
          $animatedProgress: GET_VAR 'val animatedProgress: androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> [val] declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> origin=null
          $pm25Value: GET_VAR 'pm25Value: kotlin.Int declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=kotlin.Int origin=null
          $completion: CONST Null type=kotlin.Nothing? value=null
    CALL 'public final fun Box$default (modifier: androidx.compose.ui.Modifier?, contentAlignment: androidx.compose.ui.Alignment?, propagateMinConstraints: kotlin.Boolean, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit [inline] declared in androidx.compose.foundation.layout.BoxKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      modifier: CALL 'public final fun size-3ABfNKs (size: androidx.compose.ui.unit.Dp): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.SizeKt' type=androidx.compose.ui.Modifier origin=null
        $receiver: GET_VAR 'modifier: androidx.compose.ui.Modifier declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=androidx.compose.ui.Modifier origin=null
        size: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          $receiver: CONST Int type=kotlin.Int value=200
      contentAlignment: CALL 'public final fun <get-Center> (): androidx.compose.ui.Alignment declared in androidx.compose.ui.Alignment.Companion' type=androidx.compose.ui.Alignment origin=GET_PROPERTY
        $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.Alignment.Companion visibility:public [final,static] declared in androidx.compose.ui.Alignment' type=androidx.compose.ui.Alignment.Companion origin=null
      propagateMinConstraints: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
        CONST Boolean type=kotlin.Boolean value=false
      content: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        FUNCTION_REFERENCE 'private final fun Pm25Indicator$lambda$3 ($animatedProgress: androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D>, $indicatorColor: androidx.compose.ui.graphics.Color, $pm25Value: kotlin.Int): kotlin.Unit declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.BoxScope, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
          $animatedProgress: GET_VAR 'val animatedProgress: androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> [val] declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> origin=null
          $indicatorColor: GET_VAR 'val indicatorColor: androidx.compose.ui.graphics.Color [val] declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=androidx.compose.ui.graphics.Color origin=null
          $pm25Value: GET_VAR 'pm25Value: kotlin.Int declared in com.skripsi.airquality.ui.components.Pm25IndicatorKt.Pm25Indicator' type=kotlin.Int origin=null
      $mask0: CONST Int type=kotlin.Int value=4
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:407)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:424)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:52)
	... 45 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:598)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:735)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:529)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:236)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 55 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/CompositionLocal;.getCurrent()Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 70 more


